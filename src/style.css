:root {
  --padding-base: 0.75rem;
  --padding-quarter: 0.1875rem;
  --padding-half: 0.375rem;
  --padding-quarter: 0.1875rem;
  --padding-2x: 1.5rem;
  --padding-4x: 3rem;
  --padding-8x: 6rem;
  --border-radius: 0.5rem;
  --border-radius-large: 1rem;
  --color-background: #fafafa;
  --color-background-contrast: #eee;
  --color-base: #333;
  --color-light: #767676;
  --color-red: #b71717;
  --color-brand-light: #ceb8ff;
  --color-brand: #4414ab;
  --color-brand-dark: #300c7e;
  --font-size-small: calc(0.875rem + 0.15vw);
  --font-size-base: calc(1rem + 0.15vw);
  --font-size-large: calc(1.25rem + 0.15vw);
  --font-size-xLarge: calc(1.5rem + 0.15vw);
  --easing-base: cubic-bezier(1, -0.16, 0.06, 1.35);
  --width-page: 70rem;
}

*,
*::before,
*::after {
  box-sizing: border-box;
  overflow-wrap: break-word;
}

* {
  margin: 0;
}

html,
body {
  min-height: 100%;
}

body {
  font-size: var(--font-size-base);
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
}

img,
svg {
  display: block;
  max-width: 100%;
  height: auto;
}

h1,
h2,
h3 {
  font-weight: 600;
  margin: 0;
}

h1,
h2 {
  align-items: center;
  display: flex;
  gap: var(--padding-base);
  line-height: 1.2;
}

h1 {
  color: var(--color-brand);
}

input,
button {
  font: inherit;
  transition: all 0.15s ease-out;
}

button {
  background: none;
  border-radius: var(--border-radius);
  border: none;
  color: inherit;
  cursor: pointer;
  line-height: 1;
  padding: var(--padding-half);
}

button:hover,
button:focus {
  background-color: var(--color-background-contrast);
}

label {
  display: block;
  font-size: var(--font-size-small);
}

input {
  border-radius: var(--border-radius);
  border: 1px solid var(--color-light);
  padding: var(--padding-half);
  width: 100%;
}

input:hover {
  border-color: var(--color-base);
}

input:focus {
  border-color: var(--color-brand);
  box-shadow: 0 0 0 3px var(--color-brand-light);
}

::selection {
  background: var(--color-brand-light);
}

/* Styles */

body {
  background: var(--color-background-contrast);
  color: var(--color-base);
  font-family: 'Poppins', sans-serif;
  line-height: 1.5;
}

#app {
  min-height: inherit;
}

#app > header {
  margin-bottom: var(--padding-base);
}

.callout {
  display: flex;
  flex-direction: column;
  align-items: center;
  min-height: 10rem;
  gap: var(--padding-half);
  justify-content: center;
}

.error {
  color: var(--color-red);
}

.text-capitalize {
  text-transform: capitalize;
}

/** Layouts **/

.flex {
  align-items: center;
  column-gap: var(--padding-base);
  display: flex;
  justify-content: center;
  padding: 0;
  row-gap: var(--padding-base);
}

.stack {
  display: flex;
  flex-direction: column;
  gap: var(--padding-base);
  list-style: none;
  padding: 0;
}

.grid-blocks-4 {
  display: grid;
  gap: var(--padding-base);
  grid-template-columns: repeat(4, minmax(0, 1fr));
  grid-template-rows: repeat(auto, auto);
  list-style: none;
  padding: 0;
}

.grid-acb {
  display: grid;
  gap: var(--padding-base);
  grid-template-areas:
    'c a'
    'c b';
  /* So header takes up min space */
  grid-template-rows: auto 1fr;
  grid-template-columns: 18rem 1fr;
  overflow: hidden;
}

/* 3 areas in grid-acb */
.header,
.content {
  padding: var(--padding-2x);
}

.header {
  grid-area: a;
}

.content {
  grid-area: b;
}

.filters {
  background: var(--color-background);
  grid-area: c;
  height: 100vh;
  overflow: hidden;
  padding-top: var(--padding-base);
  position: relative;
}

.filters > * {
  padding: 0 var(--padding-base);
}

@media screen and (max-width: 60rem) {
  .grid-blocks-4 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
}

@media screen and (max-width: 40rem) {
  /* Stacking order on mobile: acb */
  .grid-acb {
    gap: 0;
    grid-template-areas:
      'a'
      'c'
      'b';
    grid-template-columns: 1fr;
  }

  .header,
  .content {
    padding: var(--padding-base);
  }

  .filters {
    height: 20rem;
  }

  .flex-container {
    display: block;
  }

  /* Reduce items per row */
  .grid-blocks-4 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}
